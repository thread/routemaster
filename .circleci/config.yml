version: 2

jobs:
  build:
    working_directory: ~/routemaster
    docker:
      # First container is where our steps run.
      - image: circleci/python:3.6.3
        environment:
          - PG_HOST=localhost
          - PG_PORT=5432
          - PG_DB=routemaster
          - PG_USER=routemaster

      # Ancilliary containers
      - image: postgres:9.6
        environment:
          - POSTGRES_USER=routemaster
          - POSTGRES_DB=routemaster

    steps:
      - checkout

        # Set up a cached virtualenv in which to install tox
      - restore_cache:
          name: Restore build dependency cache
          key: deps-venv-{{ .Branch }}-2.9.1
      - run:
          name: Install tox
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install tox==2.9.1
      - save_cache:
          name: Save build dependency cache
          key: deps-venv-{{ .Branch }}-2.9.1
          paths:
            - "venv"

      # Setup the database
      - run:
          name: Install psql
          command: sudo apt install postgresql-client
      - run:
          name: Wait for Database with Dockerize
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run:
          name: Setup Database
          command: |
            psql --host=$PG_HOST --username=$PG_USER $PG_DB <<END_SQL
            CREATE TABLE labels (
            	name VARCHAR NOT NULL,
            	state_machine VARCHAR NOT NULL,
            	context JSONB,
            	PRIMARY KEY (name, state_machine)
            );
            CREATE TABLE label_history (
            	id SERIAL NOT NULL,
            	label_name VARCHAR,
            	label_state_machine VARCHAR,
            	created TIMESTAMP WITHOUT TIME ZONE,
            	forced BOOLEAN,
            	old_state VARCHAR,
            	new_state VARCHAR,
            	PRIMARY KEY (id),
            	FOREIGN KEY(label_name, label_state_machine) REFERENCES labels (name, state_machine)
            );
            CREATE TABLE state_machines (
            	name VARCHAR NOT NULL,
            	updated TIMESTAMP WITHOUT TIME ZONE,
            	PRIMARY KEY (name)
            );
            CREATE TABLE states (
            	name VARCHAR NOT NULL,
            	state_machine INTEGER NOT NULL,
            	deprecated BOOLEAN,
            	updated TIMESTAMP WITHOUT TIME ZONE,
            	PRIMARY KEY (name, state_machine),
            	FOREIGN KEY(state_machine) REFERENCES state_machines (name)
            );
            END_SQL

      # Run tox, caching the .tox directory
      - restore_cache:
          name: Restore .tox cache
          key: deps-tox-{{ .Branch }}-{{ checksum "scripts/linting/requirements.txt" }}-{{ checksum "scripts/testing/requirements.txt" }}-{{ checksum "setup.py" }}
      - run:
          name: Test/Lint/Typecheck
          command: |
            . venv/bin/activate
            tox
      - save_cache:
          name: Save .tox cache
          key: deps-tox-{{ .Branch }}-{{ checksum "scripts/linting/requirements.txt" }}-{{ checksum "scripts/testing/requirements.txt" }}-{{ checksum "setup.py" }}
          paths:
            - ".tox"

      # Testing done, store results
      - store_test_results:
          path: build/results
      - store_artifacts:
          path: build/artifacts/coverage
          destination: coverage
